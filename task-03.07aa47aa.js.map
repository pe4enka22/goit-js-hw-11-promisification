{"version":3,"sources":["task-03.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","promise","Promise","resolve","reject","setTimeout","canProcess","infTransaction","transactionId","id","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AAAA,IAAMA,EAA4B,SAACC,EAAKC,GAC7BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAAAC,GAChBC,IAAAA,EAAQR,EAA0B,IAAK,KAEtCS,OAAAA,QAAU,IAAIC,QAAS,SAACC,EAASC,GACpCC,WAAW,WAGHC,GAFeX,KAAKE,SAAW,GAEnB,CACVU,IAAAA,EAAiB,CAAEC,cAAeT,EAAYU,GAAIT,MAAAA,GACtDG,EAAQI,QAERH,EAAOL,EAAYU,KAEpBT,MAILU,EAAa,SAACH,GAClBI,QAAQC,IAAmBL,eAAAA,OAAAA,EAAeC,cAA8BD,kBAAAA,OAAAA,EAAeP,MAAvF,QAGIa,EAAW,SAAAJ,GACfE,QAAQG,KAAqCL,gCAAAA,OAAAA,EAA7C,+BAIJX,EAAgB,CAAEW,GAAI,GAAIM,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETf,EAAgB,CAAEW,GAAI,GAAIM,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETf,EAAgB,CAAEW,GAAI,GAAIM,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETf,EAAgB,CAAEW,GAAI,GAAIM,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ","file":"task-03.07aa47aa.js","sourceRoot":"../src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n  \n  const makeTransaction = transaction => {\n    const delay = randomIntegerFromInterval(200, 500);\n\n    return promise = new Promise ((resolve, reject) => {\n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n        \n            if (canProcess) {\n              let infTransaction = { transactionId: transaction.id, delay }\n              resolve(infTransaction);\n            } else {\n              reject(transaction.id);\n            }\n          }, delay);\n        })\n    }\n  \n  const logSuccess = (infTransaction) => {\n    console.log(`Transaction ${infTransaction.transactionId} processed in ${infTransaction.delay}ms`);\n  };\n  \n  const logError = id => {\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n  \n\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);\n"]}